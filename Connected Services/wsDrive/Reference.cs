//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wsDrive
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.ReportViewField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.CheckField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.DropDownField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.ListField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.NumberField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.RadioGroupField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.RuleField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.SignatureField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.StatusField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.ClipField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.CurrencyField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.MemoField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.TextField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.DateTimeField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.GridField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.ButtonField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.ImageField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.LabelField))]
    public partial class FormField : wsDrive.NamedVisualItem
    {
        
        private bool AutoRefillField;
        
        private string ClientExtensionsField;
        
        private string CultureField;
        
        private string DataTypeField;
        
        private string FieldStateField;
        
        private int HeightField;
        
        private string HintField;
        
        private bool IsDependentField;
        
        private int LeftField;
        
        private string MemberFieldNameField;
        
        private int TabIndexField;
        
        private int TopField;
        
        private wsDrive.FieldUsageOption UsageField;
        
        private string VisibilityFormulaField;
        
        private string[] VisibleDependantsField;
        
        private int WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoRefill
        {
            get
            {
                return this.AutoRefillField;
            }
            set
            {
                if ((this.AutoRefillField.Equals(value) != true))
                {
                    this.AutoRefillField = value;
                    this.RaisePropertyChanged("AutoRefill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientExtensions
        {
            get
            {
                return this.ClientExtensionsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ClientExtensionsField, value) != true))
                {
                    this.ClientExtensionsField = value;
                    this.RaisePropertyChanged("ClientExtensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture
        {
            get
            {
                return this.CultureField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CultureField, value) != true))
                {
                    this.CultureField = value;
                    this.RaisePropertyChanged("Culture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType
        {
            get
            {
                return this.DataTypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DataTypeField, value) != true))
                {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldState
        {
            get
            {
                return this.FieldStateField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FieldStateField, value) != true))
                {
                    this.FieldStateField = value;
                    this.RaisePropertyChanged("FieldState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height
        {
            get
            {
                return this.HeightField;
            }
            set
            {
                if ((this.HeightField.Equals(value) != true))
                {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hint
        {
            get
            {
                return this.HintField;
            }
            set
            {
                if ((object.ReferenceEquals(this.HintField, value) != true))
                {
                    this.HintField = value;
                    this.RaisePropertyChanged("Hint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDependent
        {
            get
            {
                return this.IsDependentField;
            }
            set
            {
                if ((this.IsDependentField.Equals(value) != true))
                {
                    this.IsDependentField = value;
                    this.RaisePropertyChanged("IsDependent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Left
        {
            get
            {
                return this.LeftField;
            }
            set
            {
                if ((this.LeftField.Equals(value) != true))
                {
                    this.LeftField = value;
                    this.RaisePropertyChanged("Left");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberFieldName
        {
            get
            {
                return this.MemberFieldNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MemberFieldNameField, value) != true))
                {
                    this.MemberFieldNameField = value;
                    this.RaisePropertyChanged("MemberFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TabIndex
        {
            get
            {
                return this.TabIndexField;
            }
            set
            {
                if ((this.TabIndexField.Equals(value) != true))
                {
                    this.TabIndexField = value;
                    this.RaisePropertyChanged("TabIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Top
        {
            get
            {
                return this.TopField;
            }
            set
            {
                if ((this.TopField.Equals(value) != true))
                {
                    this.TopField = value;
                    this.RaisePropertyChanged("Top");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.FieldUsageOption Usage
        {
            get
            {
                return this.UsageField;
            }
            set
            {
                if ((this.UsageField.Equals(value) != true))
                {
                    this.UsageField = value;
                    this.RaisePropertyChanged("Usage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisibilityFormula
        {
            get
            {
                return this.VisibilityFormulaField;
            }
            set
            {
                if ((object.ReferenceEquals(this.VisibilityFormulaField, value) != true))
                {
                    this.VisibilityFormulaField = value;
                    this.RaisePropertyChanged("VisibilityFormula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] VisibleDependants
        {
            get
            {
                return this.VisibleDependantsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.VisibleDependantsField, value) != true))
                {
                    this.VisibleDependantsField = value;
                    this.RaisePropertyChanged("VisibleDependants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width
        {
            get
            {
                return this.WidthField;
            }
            set
            {
                if ((this.WidthField.Equals(value) != true))
                {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NamedVisualItem", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.FolderAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.FormField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.ReportViewField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.CheckField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.DropDownField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.ListField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.NumberField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.RadioGroupField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.RuleField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.SignatureField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.StatusField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.ClipField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.CurrencyField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.MemoField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.TextField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.DateTimeField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.GridField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.ButtonField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.ImageField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.LabelField))]
    public partial class NamedVisualItem : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string CaptionField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption
        {
            get
            {
                return this.CaptionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CaptionField, value) != true))
                {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderAction", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService")]
    public partial class FolderAction : wsDrive.NamedVisualItem
    {
        
        private wsDrive.ActionPageType ActionTypeField;
        
        private string PageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.ActionPageType ActionType
        {
            get
            {
                return this.ActionTypeField;
            }
            set
            {
                if ((this.ActionTypeField.Equals(value) != true))
                {
                    this.ActionTypeField = value;
                    this.RaisePropertyChanged("ActionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Page
        {
            get
            {
                return this.PageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PageField, value) != true))
                {
                    this.PageField = value;
                    this.RaisePropertyChanged("Page");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportViewField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class ReportViewField : wsDrive.FormField
    {
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ValueField, value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class CheckField : wsDrive.FormField
    {
        
        private wsDrive.TextAlignment TextAlignmentField;
        
        private bool ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.TextAlignment TextAlignment
        {
            get
            {
                return this.TextAlignmentField;
            }
            set
            {
                if ((this.TextAlignmentField.Equals(value) != true))
                {
                    this.TextAlignmentField = value;
                    this.RaisePropertyChanged("TextAlignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((this.ValueField.Equals(value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DropDownField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class DropDownField : wsDrive.FormField
    {
        
        private System.Collections.Generic.KeyValuePair<string, string>[] OptionsField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string>[] Options
        {
            get
            {
                return this.OptionsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OptionsField, value) != true))
                {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ValueField, value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class ListField : wsDrive.FormField
    {
        
        private System.Collections.Generic.KeyValuePair<string, string>[] OptionsField;
        
        private string[] ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string>[] Options
        {
            get
            {
                return this.OptionsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OptionsField, value) != true))
                {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ValueField, value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NumberField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class NumberField : wsDrive.FormField
    {
        
        private int DecimalPlacesField;
        
        private double MaximumValueField;
        
        private double MinimumValueField;
        
        private double ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DecimalPlaces
        {
            get
            {
                return this.DecimalPlacesField;
            }
            set
            {
                if ((this.DecimalPlacesField.Equals(value) != true))
                {
                    this.DecimalPlacesField = value;
                    this.RaisePropertyChanged("DecimalPlaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumValue
        {
            get
            {
                return this.MaximumValueField;
            }
            set
            {
                if ((this.MaximumValueField.Equals(value) != true))
                {
                    this.MaximumValueField = value;
                    this.RaisePropertyChanged("MaximumValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumValue
        {
            get
            {
                return this.MinimumValueField;
            }
            set
            {
                if ((this.MinimumValueField.Equals(value) != true))
                {
                    this.MinimumValueField = value;
                    this.RaisePropertyChanged("MinimumValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((this.ValueField.Equals(value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadioGroupField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class RadioGroupField : wsDrive.FormField
    {
        
        private string[] OptionsField;
        
        private wsDrive.RadioButtonOrientation OrientationField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Options
        {
            get
            {
                return this.OptionsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OptionsField, value) != true))
                {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.RadioButtonOrientation Orientation
        {
            get
            {
                return this.OrientationField;
            }
            set
            {
                if ((this.OrientationField.Equals(value) != true))
                {
                    this.OrientationField = value;
                    this.RaisePropertyChanged("Orientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ValueField, value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class RuleField : wsDrive.FormField
    {
        
        private wsDrive.Color ColorField;
        
        private wsDrive.RuleStyle StyleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.Color Color
        {
            get
            {
                return this.ColorField;
            }
            set
            {
                if ((this.ColorField.Equals(value) != true))
                {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.RuleStyle Style
        {
            get
            {
                return this.StyleField;
            }
            set
            {
                if ((this.StyleField.Equals(value) != true))
                {
                    this.StyleField = value;
                    this.RaisePropertyChanged("Style");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class SignatureField : wsDrive.FormField
    {
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ValueField, value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class StatusField : wsDrive.FormField
    {
        
        private string CautionImageField;
        
        private string DangerImageField;
        
        private double DangerThresholdField;
        
        private double HundredPercentField;
        
        private string OpenActionField;
        
        private string OpenLocationField;
        
        private string OpenProcessField;
        
        private double PercentageField;
        
        private string SafeImageField;
        
        private double SafeThresholdField;
        
        private string StatusOperationField;
        
        private double ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CautionImage
        {
            get
            {
                return this.CautionImageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CautionImageField, value) != true))
                {
                    this.CautionImageField = value;
                    this.RaisePropertyChanged("CautionImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DangerImage
        {
            get
            {
                return this.DangerImageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DangerImageField, value) != true))
                {
                    this.DangerImageField = value;
                    this.RaisePropertyChanged("DangerImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DangerThreshold
        {
            get
            {
                return this.DangerThresholdField;
            }
            set
            {
                if ((this.DangerThresholdField.Equals(value) != true))
                {
                    this.DangerThresholdField = value;
                    this.RaisePropertyChanged("DangerThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HundredPercent
        {
            get
            {
                return this.HundredPercentField;
            }
            set
            {
                if ((this.HundredPercentField.Equals(value) != true))
                {
                    this.HundredPercentField = value;
                    this.RaisePropertyChanged("HundredPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenAction
        {
            get
            {
                return this.OpenActionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OpenActionField, value) != true))
                {
                    this.OpenActionField = value;
                    this.RaisePropertyChanged("OpenAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenLocation
        {
            get
            {
                return this.OpenLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OpenLocationField, value) != true))
                {
                    this.OpenLocationField = value;
                    this.RaisePropertyChanged("OpenLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenProcess
        {
            get
            {
                return this.OpenProcessField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OpenProcessField, value) != true))
                {
                    this.OpenProcessField = value;
                    this.RaisePropertyChanged("OpenProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percentage
        {
            get
            {
                return this.PercentageField;
            }
            set
            {
                if ((this.PercentageField.Equals(value) != true))
                {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SafeImage
        {
            get
            {
                return this.SafeImageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SafeImageField, value) != true))
                {
                    this.SafeImageField = value;
                    this.RaisePropertyChanged("SafeImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SafeThreshold
        {
            get
            {
                return this.SafeThresholdField;
            }
            set
            {
                if ((this.SafeThresholdField.Equals(value) != true))
                {
                    this.SafeThresholdField = value;
                    this.RaisePropertyChanged("SafeThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusOperation
        {
            get
            {
                return this.StatusOperationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StatusOperationField, value) != true))
                {
                    this.StatusOperationField = value;
                    this.RaisePropertyChanged("StatusOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((this.ValueField.Equals(value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClipField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class ClipField : wsDrive.FormField
    {
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ValueField, value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class CurrencyField : wsDrive.FormField
    {
        
        private int DecimalPlacesField;
        
        private decimal MaximumValueField;
        
        private decimal MinimumValueField;
        
        private wsDrive.NegativeNumberPosition NegativePositionField;
        
        private string SymbolField;
        
        private wsDrive.CurrencySymbolPosition SymbolPositionField;
        
        private decimal ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DecimalPlaces
        {
            get
            {
                return this.DecimalPlacesField;
            }
            set
            {
                if ((this.DecimalPlacesField.Equals(value) != true))
                {
                    this.DecimalPlacesField = value;
                    this.RaisePropertyChanged("DecimalPlaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaximumValue
        {
            get
            {
                return this.MaximumValueField;
            }
            set
            {
                if ((this.MaximumValueField.Equals(value) != true))
                {
                    this.MaximumValueField = value;
                    this.RaisePropertyChanged("MaximumValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinimumValue
        {
            get
            {
                return this.MinimumValueField;
            }
            set
            {
                if ((this.MinimumValueField.Equals(value) != true))
                {
                    this.MinimumValueField = value;
                    this.RaisePropertyChanged("MinimumValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.NegativeNumberPosition NegativePosition
        {
            get
            {
                return this.NegativePositionField;
            }
            set
            {
                if ((this.NegativePositionField.Equals(value) != true))
                {
                    this.NegativePositionField = value;
                    this.RaisePropertyChanged("NegativePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol
        {
            get
            {
                return this.SymbolField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SymbolField, value) != true))
                {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.CurrencySymbolPosition SymbolPosition
        {
            get
            {
                return this.SymbolPositionField;
            }
            set
            {
                if ((this.SymbolPositionField.Equals(value) != true))
                {
                    this.SymbolPositionField = value;
                    this.RaisePropertyChanged("SymbolPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((this.ValueField.Equals(value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemoField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class MemoField : wsDrive.FormField
    {
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ValueField, value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class TextField : wsDrive.FormField
    {
        
        private int MaximumLengthField;
        
        private string PatternField;
        
        private bool SecretField;
        
        private wsDrive.TextAlignment TextAlignmentField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumLength
        {
            get
            {
                return this.MaximumLengthField;
            }
            set
            {
                if ((this.MaximumLengthField.Equals(value) != true))
                {
                    this.MaximumLengthField = value;
                    this.RaisePropertyChanged("MaximumLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pattern
        {
            get
            {
                return this.PatternField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PatternField, value) != true))
                {
                    this.PatternField = value;
                    this.RaisePropertyChanged("Pattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Secret
        {
            get
            {
                return this.SecretField;
            }
            set
            {
                if ((this.SecretField.Equals(value) != true))
                {
                    this.SecretField = value;
                    this.RaisePropertyChanged("Secret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.TextAlignment TextAlignment
        {
            get
            {
                return this.TextAlignmentField;
            }
            set
            {
                if ((this.TextAlignmentField.Equals(value) != true))
                {
                    this.TextAlignmentField = value;
                    this.RaisePropertyChanged("TextAlignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ValueField, value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateTimeField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class DateTimeField : wsDrive.FormField
    {
        
        private wsDrive.DateTimeParts PartsField;
        
        private bool TimeZoneSupportField;
        
        private System.DateTimeOffset UnadjustedEarliestPermittedField;
        
        private System.DateTimeOffset UnadjustedLatestPermittedField;
        
        private System.Nullable<System.DateTimeOffset> ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.DateTimeParts Parts
        {
            get
            {
                return this.PartsField;
            }
            set
            {
                if ((this.PartsField.Equals(value) != true))
                {
                    this.PartsField = value;
                    this.RaisePropertyChanged("Parts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TimeZoneSupport
        {
            get
            {
                return this.TimeZoneSupportField;
            }
            set
            {
                if ((this.TimeZoneSupportField.Equals(value) != true))
                {
                    this.TimeZoneSupportField = value;
                    this.RaisePropertyChanged("TimeZoneSupport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset UnadjustedEarliestPermitted
        {
            get
            {
                return this.UnadjustedEarliestPermittedField;
            }
            set
            {
                if ((this.UnadjustedEarliestPermittedField.Equals(value) != true))
                {
                    this.UnadjustedEarliestPermittedField = value;
                    this.RaisePropertyChanged("UnadjustedEarliestPermitted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset UnadjustedLatestPermitted
        {
            get
            {
                return this.UnadjustedLatestPermittedField;
            }
            set
            {
                if ((this.UnadjustedLatestPermittedField.Equals(value) != true))
                {
                    this.UnadjustedLatestPermittedField = value;
                    this.RaisePropertyChanged("UnadjustedLatestPermitted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((this.ValueField.Equals(value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GridField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class GridField : wsDrive.FormField
    {
        
        private bool AllowAddField;
        
        private bool AllowDeleteField;
        
        private wsDrive.GridColumnField[] ColumnsField;
        
        private int CurrentPageField;
        
        private wsDrive.ServiceDataSetFormat DataFormatField;
        
        private wsDrive.GridFieldType GridTypeField;
        
        private int PageSizeField;
        
        private bool PagedField;
        
        private int RequestPageField;
        
        private System.Collections.Generic.Dictionary<string, object> SelectedRowField;
        
        private System.Collections.Generic.KeyValuePair<string, wsDrive.SortDirection>[] SortColumnsField;
        
        private int TotalRowCountField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowAdd
        {
            get
            {
                return this.AllowAddField;
            }
            set
            {
                if ((this.AllowAddField.Equals(value) != true))
                {
                    this.AllowAddField = value;
                    this.RaisePropertyChanged("AllowAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowDelete
        {
            get
            {
                return this.AllowDeleteField;
            }
            set
            {
                if ((this.AllowDeleteField.Equals(value) != true))
                {
                    this.AllowDeleteField = value;
                    this.RaisePropertyChanged("AllowDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.GridColumnField[] Columns
        {
            get
            {
                return this.ColumnsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true))
                {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPage
        {
            get
            {
                return this.CurrentPageField;
            }
            set
            {
                if ((this.CurrentPageField.Equals(value) != true))
                {
                    this.CurrentPageField = value;
                    this.RaisePropertyChanged("CurrentPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.ServiceDataSetFormat DataFormat
        {
            get
            {
                return this.DataFormatField;
            }
            set
            {
                if ((this.DataFormatField.Equals(value) != true))
                {
                    this.DataFormatField = value;
                    this.RaisePropertyChanged("DataFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.GridFieldType GridType
        {
            get
            {
                return this.GridTypeField;
            }
            set
            {
                if ((this.GridTypeField.Equals(value) != true))
                {
                    this.GridTypeField = value;
                    this.RaisePropertyChanged("GridType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize
        {
            get
            {
                return this.PageSizeField;
            }
            set
            {
                if ((this.PageSizeField.Equals(value) != true))
                {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Paged
        {
            get
            {
                return this.PagedField;
            }
            set
            {
                if ((this.PagedField.Equals(value) != true))
                {
                    this.PagedField = value;
                    this.RaisePropertyChanged("Paged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestPage
        {
            get
            {
                return this.RequestPageField;
            }
            set
            {
                if ((this.RequestPageField.Equals(value) != true))
                {
                    this.RequestPageField = value;
                    this.RaisePropertyChanged("RequestPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> SelectedRow
        {
            get
            {
                return this.SelectedRowField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SelectedRowField, value) != true))
                {
                    this.SelectedRowField = value;
                    this.RaisePropertyChanged("SelectedRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, wsDrive.SortDirection>[] SortColumns
        {
            get
            {
                return this.SortColumnsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SortColumnsField, value) != true))
                {
                    this.SortColumnsField = value;
                    this.RaisePropertyChanged("SortColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRowCount
        {
            get
            {
                return this.TotalRowCountField;
            }
            set
            {
                if ((this.TotalRowCountField.Equals(value) != true))
                {
                    this.TotalRowCountField = value;
                    this.RaisePropertyChanged("TotalRowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ValueField, value) != true))
                {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ButtonField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class ButtonField : wsDrive.FormField
    {
        
        private string ActionField;
        
        private string OperationField;
        
        private string ProcessField;
        
        private wsDrive.TextAlignment TextAlignmentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action
        {
            get
            {
                return this.ActionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ActionField, value) != true))
                {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation
        {
            get
            {
                return this.OperationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OperationField, value) != true))
                {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Process
        {
            get
            {
                return this.ProcessField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProcessField, value) != true))
                {
                    this.ProcessField = value;
                    this.RaisePropertyChanged("Process");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.TextAlignment TextAlignment
        {
            get
            {
                return this.TextAlignmentField;
            }
            set
            {
                if ((this.TextAlignmentField.Equals(value) != true))
                {
                    this.TextAlignmentField = value;
                    this.RaisePropertyChanged("TextAlignment");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class ImageField : wsDrive.FormField
    {
        
        private string FileNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FileNameField, value) != true))
                {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LabelField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class LabelField : wsDrive.FormField
    {
        
        private string LinkFieldField;
        
        private wsDrive.TextAlignment TextAlignmentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkField
        {
            get
            {
                return this.LinkFieldField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LinkFieldField, value) != true))
                {
                    this.LinkFieldField = value;
                    this.RaisePropertyChanged("LinkField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.TextAlignment TextAlignment
        {
            get
            {
                return this.TextAlignmentField;
            }
            set
            {
                if ((this.TextAlignmentField.Equals(value) != true))
                {
                    this.TextAlignmentField = value;
                    this.RaisePropertyChanged("TextAlignment");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldUsageOption", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public enum FieldUsageOption : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hidden = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadOnly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Required = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Optional = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionPageType", Namespace="Metastorm.Engine.Interface")]
    public enum ActionPageType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Form = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Confirm = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonConfirm = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Uninitialized = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextAlignment", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService")]
    public enum TextAlignment : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Center = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadioButtonOrientation", Namespace="Metastorm.Engine.Interface")]
    public enum RadioButtonOrientation : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Horizontal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vertical = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unspecified = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Color", Namespace="http://schemas.datacontract.org/2004/07/System.Drawing")]
    public partial struct Color : System.ComponentModel.INotifyPropertyChanged
    {
        
        private short knownColorField;
        
        private string nameField;
        
        private short stateField;
        
        private long valueField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public short knownColor
        {
            get
            {
                return this.knownColorField;
            }
            set
            {
                if ((this.knownColorField.Equals(value) != true))
                {
                    this.knownColorField = value;
                    this.RaisePropertyChanged("knownColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.nameField, value) != true))
                {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public short state
        {
            get
            {
                return this.stateField;
            }
            set
            {
                if ((this.stateField.Equals(value) != true))
                {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleStyle", Namespace="Metastorm.Engine.Interface")]
    public enum RuleStyle : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Flat = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Raised = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lowered = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NegativeNumberPosition", Namespace="Metastorm.Engine.Interface")]
    public enum NegativeNumberPosition : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Before = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        After = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Parentheses = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencySymbolPosition", Namespace="Metastorm.Engine.Interface")]
    public enum CurrencySymbolPosition : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Before = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        After = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateTimeParts", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public enum DateTimeParts : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Time = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GridColumnField", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService.Fields")]
    public partial class GridColumnField : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string CaptionField;
        
        private wsDrive.FormField FieldField;
        
        private int IndexField;
        
        private bool SortableField;
        
        private int WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption
        {
            get
            {
                return this.CaptionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CaptionField, value) != true))
                {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.FormField Field
        {
            get
            {
                return this.FieldField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FieldField, value) != true))
                {
                    this.FieldField = value;
                    this.RaisePropertyChanged("Field");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index
        {
            get
            {
                return this.IndexField;
            }
            set
            {
                if ((this.IndexField.Equals(value) != true))
                {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sortable
        {
            get
            {
                return this.SortableField;
            }
            set
            {
                if ((this.SortableField.Equals(value) != true))
                {
                    this.SortableField = value;
                    this.RaisePropertyChanged("Sortable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width
        {
            get
            {
                return this.WidthField;
            }
            set
            {
                if ((this.WidthField.Equals(value) != true))
                {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service.DataSetFormat", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService")]
    public enum ServiceDataSetFormat : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XML = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JSON = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GridFieldType", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL")]
    public enum GridFieldType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Attachment = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Folder = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Edit = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortDirection", Namespace="Metastorm.Runtime.Contracts")]
    public enum SortDirection : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Descending = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionData", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ProcessActivator.WebService.Hel" +
        "pers")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.BlankFormsWebServiceActionAction))]
    public partial class ActionData : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string ActionNameField;
        
        private string FolderIDField;
        
        private string FormNameField;
        
        private string ServerDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ActionName
        {
            get
            {
                return this.ActionNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ActionNameField, value) != true))
                {
                    this.ActionNameField = value;
                    this.RaisePropertyChanged("ActionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FolderID
        {
            get
            {
                return this.FolderIDField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FolderIDField, value) != true))
                {
                    this.FolderIDField = value;
                    this.RaisePropertyChanged("FolderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FormName
        {
            get
            {
                return this.FormNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FormNameField, value) != true))
                {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ServerData
        {
            get
            {
                return this.ServerDataField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ServerDataField, value) != true))
                {
                    this.ServerDataField = value;
                    this.RaisePropertyChanged("ServerData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlankFormsWebServiceActionAction", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ProcessActivator.WebServices")]
    public partial class BlankFormsWebServiceActionAction : wsDrive.ActionData
    {
        
        private wsDrive.BlankFormsWebServiceActionFields FieldsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public wsDrive.BlankFormsWebServiceActionFields Fields
        {
            get
            {
                return this.FieldsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FieldsField, value) != true))
                {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlankFormsWebServiceActionFields", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ProcessActivator.WebServices")]
    public partial class BlankFormsWebServiceActionFields : wsDrive.FormFieldsList
    {
        
        private wsDrive.MemoField JSONFlagDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.MemoField JSONFlagData
        {
            get
            {
                return this.JSONFlagDataField;
            }
            set
            {
                if ((object.ReferenceEquals(this.JSONFlagDataField, value) != true))
                {
                    this.JSONFlagDataField = value;
                    this.RaisePropertyChanged("JSONFlagData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormFieldsList", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ProcessActivator.WebService.Hel" +
        "pers")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wsDrive.BlankFormsWebServiceActionFields))]
    public partial class FormFieldsList : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationsFaultContract", Namespace="Metastorm.Engine.Interface")]
    public partial class OperationsFaultContract : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string[] m_messagesField;
        
        private string m_sourceField;
        
        private bool m_timeoutField;
        
        private string m_titleField;
        
        private wsDrive.ExceptionType m_typeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] m_messages
        {
            get
            {
                return this.m_messagesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_messagesField, value) != true))
                {
                    this.m_messagesField = value;
                    this.RaisePropertyChanged("m_messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_source
        {
            get
            {
                return this.m_sourceField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_sourceField, value) != true))
                {
                    this.m_sourceField = value;
                    this.RaisePropertyChanged("m_source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool m_timeout
        {
            get
            {
                return this.m_timeoutField;
            }
            set
            {
                if ((this.m_timeoutField.Equals(value) != true))
                {
                    this.m_timeoutField = value;
                    this.RaisePropertyChanged("m_timeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_title
        {
            get
            {
                return this.m_titleField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_titleField, value) != true))
                {
                    this.m_titleField = value;
                    this.RaisePropertyChanged("m_title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.ExceptionType m_type
        {
            get
            {
                return this.m_typeField;
            }
            set
            {
                if ((this.m_typeField.Equals(value) != true))
                {
                    this.m_typeField = value;
                    this.RaisePropertyChanged("m_type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExceptionType", Namespace="Metastorm.Engine.Interface")]
    public enum ExceptionType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Engine = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessDenied = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FolderLocked = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SessionInvalid = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StoredProcedure = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserError = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VersionMismatch = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnsupportedFeature = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TPOperation = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service.SessionState", Namespace="http://schemas.datacontract.org/2004/07/Metastorm.ECL.WebService")]
    public partial class ServiceSessionState : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.TimeSpan ClientTimeZoneOffsetField;
        
        private wsDrive.ServiceDataSetFormat DataSetFormatField;
        
        private string SessionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan ClientTimeZoneOffset
        {
            get
            {
                return this.ClientTimeZoneOffsetField;
            }
            set
            {
                if ((this.ClientTimeZoneOffsetField.Equals(value) != true))
                {
                    this.ClientTimeZoneOffsetField = value;
                    this.RaisePropertyChanged("ClientTimeZoneOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wsDrive.ServiceDataSetFormat DataSetFormat
        {
            get
            {
                return this.DataSetFormatField;
            }
            set
            {
                if ((this.DataSetFormatField.Equals(value) != true))
                {
                    this.DataSetFormatField = value;
                    this.RaisePropertyChanged("DataSetFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID
        {
            get
            {
                return this.SessionIDField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true))
                {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://metastorm.com/ECL_services", ConfigurationName="wsDrive.IprcWebServicesCoordinatorService")]
    public interface IprcWebServicesCoordinatorService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/Login", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/LoginResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(wsDrive.OperationsFaultContract), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/LoginOperatio" +
            "nsFaultContractFault", Name="OperationsFaultContract", Namespace="Metastorm.Engine.Interface")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/LoginStringFa" +
            "ult", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        wsDrive.ServiceSessionState Login(string clientType, int currentSAP, string authenticationProcess, wsDrive.FormField[] loginData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/Login", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/LoginResponse" +
            "")]
        System.Threading.Tasks.Task<wsDrive.ServiceSessionState> LoginAsync(string clientType, int currentSAP, string authenticationProcess, wsDrive.FormField[] loginData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/Logout", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/LogoutRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(wsDrive.OperationsFaultContract), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/LogoutOperati" +
            "onsFaultContractFault", Name="OperationsFaultContract", Namespace="Metastorm.Engine.Interface")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/LogoutStringF" +
            "ault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        void Logout(wsDrive.ServiceSessionState sessionState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/Logout", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/LogoutRespons" +
            "e")]
        System.Threading.Tasks.Task LogoutAsync(wsDrive.ServiceSessionState sessionState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/IsLoggedIn", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/IsLoggedInRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/IsLoggedInStr" +
            "ingFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        [System.ServiceModel.FaultContractAttribute(typeof(wsDrive.OperationsFaultContract), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/IsLoggedInOpe" +
            "rationsFaultContractFault", Name="OperationsFaultContract", Namespace="Metastorm.Engine.Interface")]
        bool IsLoggedIn(wsDrive.ServiceSessionState sessionState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/IsLoggedIn", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/IsLoggedInRes" +
            "ponse")]
        System.Threading.Tasks.Task<bool> IsLoggedInAsync(wsDrive.ServiceSessionState sessionState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SetCulture", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SetCultureRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SetCultureStr" +
            "ingFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        [System.ServiceModel.FaultContractAttribute(typeof(wsDrive.OperationsFaultContract), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SetCultureOpe" +
            "rationsFaultContractFault", Name="OperationsFaultContract", Namespace="Metastorm.Engine.Interface")]
        void SetCulture(wsDrive.ServiceSessionState sessionState, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SetCulture", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SetCultureRes" +
            "ponse")]
        System.Threading.Tasks.Task SetCultureAsync(wsDrive.ServiceSessionState sessionState, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/GetServiceNam" +
            "e", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/GetServiceNam" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/GetServiceNam" +
            "eStringFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        [System.ServiceModel.FaultContractAttribute(typeof(wsDrive.OperationsFaultContract), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/GetServiceNam" +
            "eOperationsFaultContractFault", Name="OperationsFaultContract", Namespace="Metastorm.Engine.Interface")]
        string GetServiceName(wsDrive.ServiceSessionState sessionState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/GetServiceNam" +
            "e", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/GetServiceNam" +
            "eResponse")]
        System.Threading.Tasks.Task<string> GetServiceNameAsync(wsDrive.ServiceSessionState sessionState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/BlankFormsWeb" +
            "ServiceAction", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/BlankFormsWeb" +
            "ServiceActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/BlankFormsWeb" +
            "ServiceActionStringFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        [System.ServiceModel.FaultContractAttribute(typeof(wsDrive.OperationsFaultContract), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/BlankFormsWeb" +
            "ServiceActionOperationsFaultContractFault", Name="OperationsFaultContract", Namespace="Metastorm.Engine.Interface")]
        string BlankFormsWebServiceAction(wsDrive.ServiceSessionState sessionState, string JSONFlagData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/BlankFormsWeb" +
            "ServiceAction", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/BlankFormsWeb" +
            "ServiceActionResponse")]
        System.Threading.Tasks.Task<string> BlankFormsWebServiceActionAsync(wsDrive.ServiceSessionState sessionState, string JSONFlagData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/StartBlankFor" +
            "msWebServiceAction", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/StartBlankFor" +
            "msWebServiceActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(wsDrive.OperationsFaultContract), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/StartBlankFor" +
            "msWebServiceActionOperationsFaultContractFault", Name="OperationsFaultContract", Namespace="Metastorm.Engine.Interface")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/StartBlankFor" +
            "msWebServiceActionStringFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        wsDrive.BlankFormsWebServiceActionAction StartBlankFormsWebServiceAction(wsDrive.ServiceSessionState sessionState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/StartBlankFor" +
            "msWebServiceAction", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/StartBlankFor" +
            "msWebServiceActionResponse")]
        System.Threading.Tasks.Task<wsDrive.BlankFormsWebServiceActionAction> StartBlankFormsWebServiceActionAsync(wsDrive.ServiceSessionState sessionState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SubmitBlankFo" +
            "rmsWebServiceAction", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SubmitBlankFo" +
            "rmsWebServiceActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(wsDrive.OperationsFaultContract), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SubmitBlankFo" +
            "rmsWebServiceActionOperationsFaultContractFault", Name="OperationsFaultContract", Namespace="Metastorm.Engine.Interface")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SubmitBlankFo" +
            "rmsWebServiceActionStringFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        void SubmitBlankFormsWebServiceAction(wsDrive.ServiceSessionState sessionState, wsDrive.BlankFormsWebServiceActionAction action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SubmitBlankFo" +
            "rmsWebServiceAction", ReplyAction="http://metastorm.com/ECL_services/IprcWebServicesCoordinatorService/SubmitBlankFo" +
            "rmsWebServiceActionResponse")]
        System.Threading.Tasks.Task SubmitBlankFormsWebServiceActionAsync(wsDrive.ServiceSessionState sessionState, wsDrive.BlankFormsWebServiceActionAction action);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IprcWebServicesCoordinatorServiceChannel : wsDrive.IprcWebServicesCoordinatorService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class IprcWebServicesCoordinatorServiceClient : System.ServiceModel.ClientBase<wsDrive.IprcWebServicesCoordinatorService>, wsDrive.IprcWebServicesCoordinatorService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public IprcWebServicesCoordinatorServiceClient() : 
                base(IprcWebServicesCoordinatorServiceClient.GetDefaultBinding(), IprcWebServicesCoordinatorServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IprcWebServicesCoordinatorService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IprcWebServicesCoordinatorServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(IprcWebServicesCoordinatorServiceClient.GetBindingForEndpoint(endpointConfiguration), IprcWebServicesCoordinatorServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IprcWebServicesCoordinatorServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(IprcWebServicesCoordinatorServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IprcWebServicesCoordinatorServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(IprcWebServicesCoordinatorServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IprcWebServicesCoordinatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public wsDrive.ServiceSessionState Login(string clientType, int currentSAP, string authenticationProcess, wsDrive.FormField[] loginData)
        {
            return base.Channel.Login(clientType, currentSAP, authenticationProcess, loginData);
        }
        
        public System.Threading.Tasks.Task<wsDrive.ServiceSessionState> LoginAsync(string clientType, int currentSAP, string authenticationProcess, wsDrive.FormField[] loginData)
        {
            return base.Channel.LoginAsync(clientType, currentSAP, authenticationProcess, loginData);
        }
        
        public void Logout(wsDrive.ServiceSessionState sessionState)
        {
            base.Channel.Logout(sessionState);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(wsDrive.ServiceSessionState sessionState)
        {
            return base.Channel.LogoutAsync(sessionState);
        }
        
        public bool IsLoggedIn(wsDrive.ServiceSessionState sessionState)
        {
            return base.Channel.IsLoggedIn(sessionState);
        }
        
        public System.Threading.Tasks.Task<bool> IsLoggedInAsync(wsDrive.ServiceSessionState sessionState)
        {
            return base.Channel.IsLoggedInAsync(sessionState);
        }
        
        public void SetCulture(wsDrive.ServiceSessionState sessionState, string culture)
        {
            base.Channel.SetCulture(sessionState, culture);
        }
        
        public System.Threading.Tasks.Task SetCultureAsync(wsDrive.ServiceSessionState sessionState, string culture)
        {
            return base.Channel.SetCultureAsync(sessionState, culture);
        }
        
        public string GetServiceName(wsDrive.ServiceSessionState sessionState)
        {
            return base.Channel.GetServiceName(sessionState);
        }
        
        public System.Threading.Tasks.Task<string> GetServiceNameAsync(wsDrive.ServiceSessionState sessionState)
        {
            return base.Channel.GetServiceNameAsync(sessionState);
        }
        
        public string BlankFormsWebServiceAction(wsDrive.ServiceSessionState sessionState, string JSONFlagData)
        {
            return base.Channel.BlankFormsWebServiceAction(sessionState, JSONFlagData);
        }
        
        public System.Threading.Tasks.Task<string> BlankFormsWebServiceActionAsync(wsDrive.ServiceSessionState sessionState, string JSONFlagData)
        {
            return base.Channel.BlankFormsWebServiceActionAsync(sessionState, JSONFlagData);
        }
        
        public wsDrive.BlankFormsWebServiceActionAction StartBlankFormsWebServiceAction(wsDrive.ServiceSessionState sessionState)
        {
            return base.Channel.StartBlankFormsWebServiceAction(sessionState);
        }
        
        public System.Threading.Tasks.Task<wsDrive.BlankFormsWebServiceActionAction> StartBlankFormsWebServiceActionAsync(wsDrive.ServiceSessionState sessionState)
        {
            return base.Channel.StartBlankFormsWebServiceActionAsync(sessionState);
        }
        
        public void SubmitBlankFormsWebServiceAction(wsDrive.ServiceSessionState sessionState, wsDrive.BlankFormsWebServiceActionAction action)
        {
            base.Channel.SubmitBlankFormsWebServiceAction(sessionState, action);
        }
        
        public System.Threading.Tasks.Task SubmitBlankFormsWebServiceActionAsync(wsDrive.ServiceSessionState sessionState, wsDrive.BlankFormsWebServiceActionAction action)
        {
            return base.Channel.SubmitBlankFormsWebServiceActionAsync(sessionState, action);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IprcWebServicesCoordinatorService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IprcWebServicesCoordinatorService))
            {
                return new System.ServiceModel.EndpointAddress("http://srv-jhb1-drive.gmark.local/WebServicesCoordinator/prcWebServicesCoordinato" +
                        "r.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return IprcWebServicesCoordinatorServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IprcWebServicesCoordinatorService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return IprcWebServicesCoordinatorServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IprcWebServicesCoordinatorService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IprcWebServicesCoordinatorService,
        }
    }
}
